<local:WordsBaseControl x:Class="LollyCloud.WordsUnitControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LollyCloud"
             xmlns:common="clr-namespace:LollyCommon;assembly=LollyCommon"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar x:Name="ToolBarDict" Band="1" />
            <ToolBar Band="2">
                <Button x:Name="btnAdd" Content="Add" Click="btnAdd_Click"/>
                <Button x:Name="btnRefresh" Content="Refresh" Click="btnRefresh_Click"/>
                <Button x:Name="btnBatch" Content="Batch" Click="btnBatch_Click"/>
                <Button x:Name="btnToggleToType" Content="Toggle" IsEnabled="{Binding vmSettings.ToTypeIsMovable}" Click="btnToggleToType_Click"/>
                <Button x:Name="btnPreviousUnitPart" Content="Previous" IsEnabled="{Binding vmSettings.ToTypeIsMovable}" Click="btnPreviousUnitPart_Click"/>
                <Button x:Name="btnNextUnitPart" Content="Next" IsEnabled="{Binding vmSettings.ToTypeIsMovable}" Click="btnNextUnitPart_Click"/>
                <CheckBox x:Name="chkIfEmpty" Content="If Empty" IsChecked="{Binding IfEmpty}" />
                <Button x:Name="btnRetrieveNotes" Content="Retrieve Notes" Click="btnRetrieveNotes_Click"/>
                <Button x:Name="btnClearNotes" Content="Clear Notes" Click="btnClearNotes_Click"/>
                <Button x:Name="btnReview" Content="Review" Click="btnReview_Click"/>
            </ToolBar>
            <ToolBar Band="2">
                <TextBox x:Name="tbNewWord" Text="{Binding NewWord, UpdateSourceTrigger=PropertyChanged}" Width="96" KeyDown="tbNewWord_KeyDown" wpf:HintAssist.Hint="New Word" />
                <ComboBox x:Name="cbScopeFilter" ItemsSource="{Binding Source={x:Static common:SettingsViewModel.ScopeWordFilters}}" SelectedValue="{Binding ScopeFilter}" />
                <wpf:PackIcon Width="24" Height="24" Margin="4 4 0 0" VerticalAlignment="Center" Kind="Magnify" Foreground="{Binding ElementName=tbTextFilter, Path=BorderBrush}"/>
                <TextBox x:Name="tbTextFilter" Text="{Binding TextFilter, UpdateSourceTrigger=PropertyChanged}" Width="96" wpf:HintAssist.Hint="Filter" />
            </ToolBar>
        </ToolBarTray>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="150"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <DataGrid x:Name="dgWords" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="False" ItemsSource="{Binding WordItems}"
                          dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding}"
                          BeginningEdit="OnBeginEdit" CellEditEnding="OnEndEditWord" SelectedItem="{Binding SelectedWordItem}" SelectionChanged="dgWords_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding UNITSTR}" Header="UNIT" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding PARTSTR}" Header="PART" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding SEQNUM}" Header="SEQNUM" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding WORD}" Header="WORD" />
                        <DataGridTextColumn Binding="{Binding NOTE}" Header="NOTE" />
                        <DataGridTextColumn Binding="{Binding ACCURACY}" Header="ACCURACY" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding WORDID}" Header="WORDID" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding ID}" Header="ID" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding FAMIID}" Header="FAMIID" IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                            <EventSetter Event="MouseDoubleClick" Handler="dgWords_RowDoubleClick"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <ContextMenu.Resources>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                    <Setter Property="IsEnabled" Value="{Binding HasSelectedWordItem}" />
                                </Style>
                            </ContextMenu.Resources>
                            <MenuItem x:Name="miRetrieveNote" Header="Retrieve Note" Click="miRetrieveNote_Click" />
                            <MenuItem x:Name="miClearNote" Header="Clear Note" Click="miClearNote_Click" />
                            <Separator />
                            <MenuItem x:Name="miEditWord" Header="Edit" Click="miEditWord_Click" />
                            <MenuItem x:Name="miNewPhrase" Header="Link a New Phrase" Click="miNewPhrase_Click" />
                            <MenuItem x:Name="miLinkPhrases" Header="Link Existing Phrases" Click="miLinkPhrases_Click" />
                            <Separator />
                            <MenuItem x:Name="miDelete" Header="Delete" Click="miDelete_Click" />
                            <Separator />
                            <MenuItem x:Name="miCopyWord" Header="Copy" Click="miCopyWord_Click" />
                            <MenuItem x:Name="miGoogleWord" Header="Google" Click="miGoogleWord_Click" />
                            <MenuItem x:Name="miOnlineDict" Header="Online Dictionary" Click="miOnlineDict_Click" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
                <GridSplitter Grid.Row="1" Style="{StaticResource HorizontalGridSplitter}" />
                <DataGrid Grid.Row="2" x:Name="dgPhrases" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="False"
                          ItemsSource="{Binding PhraseItems}" SelectedItem="{Binding SelectedPhraseItem}"
                          BeginningEdit="OnBeginEdit" CellEditEnding="OnEndEditPhrase">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ID}" Header="ID" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding PHRASE}" Header="PHRASE"/>
                        <DataGridTextColumn Binding="{Binding TRANSLATION}" Header="TRANSLATION"/>
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                            <EventSetter Event="MouseDoubleClick" Handler="dgPhrases_RowDoubleClick"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <ContextMenu.Resources>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                    <Setter Property="IsEnabled" Value="{Binding HasSelectedPhraseItem}" />
                                </Style>
                            </ContextMenu.Resources>
                            <MenuItem x:Name="miEditPhrase" Header="Edit" Click="miEditPhrase_Click" />
                            <MenuItem x:Name="miUnlinkPhrase" Header="Unlink" Click="miUnlinkPhrase_Click" />
                            <Separator />
                            <MenuItem x:Name="miCopyPhrase" Header="Copy" Click="miCopyPhrase_Click" />
                            <MenuItem x:Name="miGooglePhrase" Header="Google" Click="miGooglePhrase_Click" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
                <StatusBar Grid.Row="3">
                    <Label Content="{Binding StatusText}"/>
                </StatusBar>
            </Grid>
            <GridSplitter Grid.Column="1" Style="{StaticResource VerticalGridSplitter}" />
            <dragablz:TabablzControl Grid.Column="2" x:Name="tcDicts" ItemsSource="{Binding Tabs}" ShowDefaultCloseButton="True" ClosingItemCallback="{Binding ClosingTabItemHandler}">
                <dragablz:TabablzControl.InterTabController>
                    <dragablz:InterTabController InterTabClient="{Binding ActionInterTabClient}"/>
                </dragablz:TabablzControl.InterTabController>
                <dragablz:TabablzControl.HeaderItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Header}"/>
                    </DataTemplate>
                </dragablz:TabablzControl.HeaderItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <UserControl Content="{Binding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </dragablz:TabablzControl>
        </Grid>
    </DockPanel>
</local:WordsBaseControl>
