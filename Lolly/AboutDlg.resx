<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>