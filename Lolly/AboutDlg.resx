<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>